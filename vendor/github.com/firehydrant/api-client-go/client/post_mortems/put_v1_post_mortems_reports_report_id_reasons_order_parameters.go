// Code generated by go-swagger; DO NOT EDIT.

package post_mortems

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/firehydrant/api-client-go/models"
)

// NewPutV1PostMortemsReportsReportIDReasonsOrderParams creates a new PutV1PostMortemsReportsReportIDReasonsOrderParams object
// with the default values initialized.
func NewPutV1PostMortemsReportsReportIDReasonsOrderParams() *PutV1PostMortemsReportsReportIDReasonsOrderParams {
	var ()
	return &PutV1PostMortemsReportsReportIDReasonsOrderParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutV1PostMortemsReportsReportIDReasonsOrderParamsWithTimeout creates a new PutV1PostMortemsReportsReportIDReasonsOrderParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutV1PostMortemsReportsReportIDReasonsOrderParamsWithTimeout(timeout time.Duration) *PutV1PostMortemsReportsReportIDReasonsOrderParams {
	var ()
	return &PutV1PostMortemsReportsReportIDReasonsOrderParams{

		timeout: timeout,
	}
}

// NewPutV1PostMortemsReportsReportIDReasonsOrderParamsWithContext creates a new PutV1PostMortemsReportsReportIDReasonsOrderParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutV1PostMortemsReportsReportIDReasonsOrderParamsWithContext(ctx context.Context) *PutV1PostMortemsReportsReportIDReasonsOrderParams {
	var ()
	return &PutV1PostMortemsReportsReportIDReasonsOrderParams{

		Context: ctx,
	}
}

// NewPutV1PostMortemsReportsReportIDReasonsOrderParamsWithHTTPClient creates a new PutV1PostMortemsReportsReportIDReasonsOrderParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutV1PostMortemsReportsReportIDReasonsOrderParamsWithHTTPClient(client *http.Client) *PutV1PostMortemsReportsReportIDReasonsOrderParams {
	var ()
	return &PutV1PostMortemsReportsReportIDReasonsOrderParams{
		HTTPClient: client,
	}
}

/*PutV1PostMortemsReportsReportIDReasonsOrderParams contains all the parameters to send to the API endpoint
for the put v1 post mortems reports report Id reasons order operation typically these are written to a http.Request
*/
type PutV1PostMortemsReportsReportIDReasonsOrderParams struct {

	/*V1PostMortemsReportsReportIDReasonsOrder*/
	V1PostMortemsReportsReportIDReasonsOrder *models.PutV1PostMortemsReportsReportIDReasonsOrder
	/*ReportID*/
	ReportID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put v1 post mortems reports report Id reasons order params
func (o *PutV1PostMortemsReportsReportIDReasonsOrderParams) WithTimeout(timeout time.Duration) *PutV1PostMortemsReportsReportIDReasonsOrderParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put v1 post mortems reports report Id reasons order params
func (o *PutV1PostMortemsReportsReportIDReasonsOrderParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put v1 post mortems reports report Id reasons order params
func (o *PutV1PostMortemsReportsReportIDReasonsOrderParams) WithContext(ctx context.Context) *PutV1PostMortemsReportsReportIDReasonsOrderParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put v1 post mortems reports report Id reasons order params
func (o *PutV1PostMortemsReportsReportIDReasonsOrderParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put v1 post mortems reports report Id reasons order params
func (o *PutV1PostMortemsReportsReportIDReasonsOrderParams) WithHTTPClient(client *http.Client) *PutV1PostMortemsReportsReportIDReasonsOrderParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put v1 post mortems reports report Id reasons order params
func (o *PutV1PostMortemsReportsReportIDReasonsOrderParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithV1PostMortemsReportsReportIDReasonsOrder adds the v1PostMortemsReportsReportIDReasonsOrder to the put v1 post mortems reports report Id reasons order params
func (o *PutV1PostMortemsReportsReportIDReasonsOrderParams) WithV1PostMortemsReportsReportIDReasonsOrder(v1PostMortemsReportsReportIDReasonsOrder *models.PutV1PostMortemsReportsReportIDReasonsOrder) *PutV1PostMortemsReportsReportIDReasonsOrderParams {
	o.SetV1PostMortemsReportsReportIDReasonsOrder(v1PostMortemsReportsReportIDReasonsOrder)
	return o
}

// SetV1PostMortemsReportsReportIDReasonsOrder adds the v1PostMortemsReportsReportIdReasonsOrder to the put v1 post mortems reports report Id reasons order params
func (o *PutV1PostMortemsReportsReportIDReasonsOrderParams) SetV1PostMortemsReportsReportIDReasonsOrder(v1PostMortemsReportsReportIDReasonsOrder *models.PutV1PostMortemsReportsReportIDReasonsOrder) {
	o.V1PostMortemsReportsReportIDReasonsOrder = v1PostMortemsReportsReportIDReasonsOrder
}

// WithReportID adds the reportID to the put v1 post mortems reports report Id reasons order params
func (o *PutV1PostMortemsReportsReportIDReasonsOrderParams) WithReportID(reportID string) *PutV1PostMortemsReportsReportIDReasonsOrderParams {
	o.SetReportID(reportID)
	return o
}

// SetReportID adds the reportId to the put v1 post mortems reports report Id reasons order params
func (o *PutV1PostMortemsReportsReportIDReasonsOrderParams) SetReportID(reportID string) {
	o.ReportID = reportID
}

// WriteToRequest writes these params to a swagger request
func (o *PutV1PostMortemsReportsReportIDReasonsOrderParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.V1PostMortemsReportsReportIDReasonsOrder != nil {
		if err := r.SetBodyParam(o.V1PostMortemsReportsReportIDReasonsOrder); err != nil {
			return err
		}
	}

	// path param report_id
	if err := r.SetPathParam("report_id", o.ReportID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
