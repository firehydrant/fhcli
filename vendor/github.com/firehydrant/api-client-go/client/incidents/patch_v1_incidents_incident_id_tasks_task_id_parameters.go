// Code generated by go-swagger; DO NOT EDIT.

package incidents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewPatchV1IncidentsIncidentIDTasksTaskIDParams creates a new PatchV1IncidentsIncidentIDTasksTaskIDParams object
// with the default values initialized.
func NewPatchV1IncidentsIncidentIDTasksTaskIDParams() *PatchV1IncidentsIncidentIDTasksTaskIDParams {
	var ()
	return &PatchV1IncidentsIncidentIDTasksTaskIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPatchV1IncidentsIncidentIDTasksTaskIDParamsWithTimeout creates a new PatchV1IncidentsIncidentIDTasksTaskIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPatchV1IncidentsIncidentIDTasksTaskIDParamsWithTimeout(timeout time.Duration) *PatchV1IncidentsIncidentIDTasksTaskIDParams {
	var ()
	return &PatchV1IncidentsIncidentIDTasksTaskIDParams{

		timeout: timeout,
	}
}

// NewPatchV1IncidentsIncidentIDTasksTaskIDParamsWithContext creates a new PatchV1IncidentsIncidentIDTasksTaskIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewPatchV1IncidentsIncidentIDTasksTaskIDParamsWithContext(ctx context.Context) *PatchV1IncidentsIncidentIDTasksTaskIDParams {
	var ()
	return &PatchV1IncidentsIncidentIDTasksTaskIDParams{

		Context: ctx,
	}
}

// NewPatchV1IncidentsIncidentIDTasksTaskIDParamsWithHTTPClient creates a new PatchV1IncidentsIncidentIDTasksTaskIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPatchV1IncidentsIncidentIDTasksTaskIDParamsWithHTTPClient(client *http.Client) *PatchV1IncidentsIncidentIDTasksTaskIDParams {
	var ()
	return &PatchV1IncidentsIncidentIDTasksTaskIDParams{
		HTTPClient: client,
	}
}

/*PatchV1IncidentsIncidentIDTasksTaskIDParams contains all the parameters to send to the API endpoint
for the patch v1 incidents incident Id tasks task Id operation typically these are written to a http.Request
*/
type PatchV1IncidentsIncidentIDTasksTaskIDParams struct {

	/*IncidentID*/
	IncidentID int32
	/*Position*/
	Position *int32
	/*State*/
	State *string
	/*TaskID*/
	TaskID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the patch v1 incidents incident Id tasks task Id params
func (o *PatchV1IncidentsIncidentIDTasksTaskIDParams) WithTimeout(timeout time.Duration) *PatchV1IncidentsIncidentIDTasksTaskIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the patch v1 incidents incident Id tasks task Id params
func (o *PatchV1IncidentsIncidentIDTasksTaskIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the patch v1 incidents incident Id tasks task Id params
func (o *PatchV1IncidentsIncidentIDTasksTaskIDParams) WithContext(ctx context.Context) *PatchV1IncidentsIncidentIDTasksTaskIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the patch v1 incidents incident Id tasks task Id params
func (o *PatchV1IncidentsIncidentIDTasksTaskIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the patch v1 incidents incident Id tasks task Id params
func (o *PatchV1IncidentsIncidentIDTasksTaskIDParams) WithHTTPClient(client *http.Client) *PatchV1IncidentsIncidentIDTasksTaskIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the patch v1 incidents incident Id tasks task Id params
func (o *PatchV1IncidentsIncidentIDTasksTaskIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIncidentID adds the incidentID to the patch v1 incidents incident Id tasks task Id params
func (o *PatchV1IncidentsIncidentIDTasksTaskIDParams) WithIncidentID(incidentID int32) *PatchV1IncidentsIncidentIDTasksTaskIDParams {
	o.SetIncidentID(incidentID)
	return o
}

// SetIncidentID adds the incidentId to the patch v1 incidents incident Id tasks task Id params
func (o *PatchV1IncidentsIncidentIDTasksTaskIDParams) SetIncidentID(incidentID int32) {
	o.IncidentID = incidentID
}

// WithPosition adds the position to the patch v1 incidents incident Id tasks task Id params
func (o *PatchV1IncidentsIncidentIDTasksTaskIDParams) WithPosition(position *int32) *PatchV1IncidentsIncidentIDTasksTaskIDParams {
	o.SetPosition(position)
	return o
}

// SetPosition adds the position to the patch v1 incidents incident Id tasks task Id params
func (o *PatchV1IncidentsIncidentIDTasksTaskIDParams) SetPosition(position *int32) {
	o.Position = position
}

// WithState adds the state to the patch v1 incidents incident Id tasks task Id params
func (o *PatchV1IncidentsIncidentIDTasksTaskIDParams) WithState(state *string) *PatchV1IncidentsIncidentIDTasksTaskIDParams {
	o.SetState(state)
	return o
}

// SetState adds the state to the patch v1 incidents incident Id tasks task Id params
func (o *PatchV1IncidentsIncidentIDTasksTaskIDParams) SetState(state *string) {
	o.State = state
}

// WithTaskID adds the taskID to the patch v1 incidents incident Id tasks task Id params
func (o *PatchV1IncidentsIncidentIDTasksTaskIDParams) WithTaskID(taskID string) *PatchV1IncidentsIncidentIDTasksTaskIDParams {
	o.SetTaskID(taskID)
	return o
}

// SetTaskID adds the taskId to the patch v1 incidents incident Id tasks task Id params
func (o *PatchV1IncidentsIncidentIDTasksTaskIDParams) SetTaskID(taskID string) {
	o.TaskID = taskID
}

// WriteToRequest writes these params to a swagger request
func (o *PatchV1IncidentsIncidentIDTasksTaskIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param incident_id
	if err := r.SetPathParam("incident_id", swag.FormatInt32(o.IncidentID)); err != nil {
		return err
	}

	if o.Position != nil {

		// form param position
		var frPosition int32
		if o.Position != nil {
			frPosition = *o.Position
		}
		fPosition := swag.FormatInt32(frPosition)
		if fPosition != "" {
			if err := r.SetFormParam("position", fPosition); err != nil {
				return err
			}
		}

	}

	if o.State != nil {

		// form param state
		var frState string
		if o.State != nil {
			frState = *o.State
		}
		fState := frState
		if fState != "" {
			if err := r.SetFormParam("state", fState); err != nil {
				return err
			}
		}

	}

	// path param task_id
	if err := r.SetPathParam("task_id", o.TaskID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
