// Code generated by go-swagger; DO NOT EDIT.

package incidents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/firehydrant/api-client-go/models"
)

// PostV1IncidentsIncidentIDRelatedChangeEventsReader is a Reader for the PostV1IncidentsIncidentIDRelatedChangeEvents structure.
type PostV1IncidentsIncidentIDRelatedChangeEventsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostV1IncidentsIncidentIDRelatedChangeEventsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewPostV1IncidentsIncidentIDRelatedChangeEventsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostV1IncidentsIncidentIDRelatedChangeEventsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewPostV1IncidentsIncidentIDRelatedChangeEventsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostV1IncidentsIncidentIDRelatedChangeEventsCreated creates a PostV1IncidentsIncidentIDRelatedChangeEventsCreated with default headers values
func NewPostV1IncidentsIncidentIDRelatedChangeEventsCreated() *PostV1IncidentsIncidentIDRelatedChangeEventsCreated {
	return &PostV1IncidentsIncidentIDRelatedChangeEventsCreated{}
}

/*PostV1IncidentsIncidentIDRelatedChangeEventsCreated handles this case with default header values.

Associate a change event to the incident
*/
type PostV1IncidentsIncidentIDRelatedChangeEventsCreated struct {
	Payload *models.RelatedChangeEventEntity
}

func (o *PostV1IncidentsIncidentIDRelatedChangeEventsCreated) Error() string {
	return fmt.Sprintf("[POST /v1/incidents/{incident_id}/related_change_events][%d] postV1IncidentsIncidentIdRelatedChangeEventsCreated  %+v", 201, o.Payload)
}

func (o *PostV1IncidentsIncidentIDRelatedChangeEventsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RelatedChangeEventEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1IncidentsIncidentIDRelatedChangeEventsBadRequest creates a PostV1IncidentsIncidentIDRelatedChangeEventsBadRequest with default headers values
func NewPostV1IncidentsIncidentIDRelatedChangeEventsBadRequest() *PostV1IncidentsIncidentIDRelatedChangeEventsBadRequest {
	return &PostV1IncidentsIncidentIDRelatedChangeEventsBadRequest{}
}

/*PostV1IncidentsIncidentIDRelatedChangeEventsBadRequest handles this case with default header values.

Bad Request
*/
type PostV1IncidentsIncidentIDRelatedChangeEventsBadRequest struct {
	Payload *models.ErrorEntity
}

func (o *PostV1IncidentsIncidentIDRelatedChangeEventsBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/incidents/{incident_id}/related_change_events][%d] postV1IncidentsIncidentIdRelatedChangeEventsBadRequest  %+v", 400, o.Payload)
}

func (o *PostV1IncidentsIncidentIDRelatedChangeEventsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1IncidentsIncidentIDRelatedChangeEventsConflict creates a PostV1IncidentsIncidentIDRelatedChangeEventsConflict with default headers values
func NewPostV1IncidentsIncidentIDRelatedChangeEventsConflict() *PostV1IncidentsIncidentIDRelatedChangeEventsConflict {
	return &PostV1IncidentsIncidentIDRelatedChangeEventsConflict{}
}

/*PostV1IncidentsIncidentIDRelatedChangeEventsConflict handles this case with default header values.

Already Added
*/
type PostV1IncidentsIncidentIDRelatedChangeEventsConflict struct {
	Payload *models.ErrorEntity
}

func (o *PostV1IncidentsIncidentIDRelatedChangeEventsConflict) Error() string {
	return fmt.Sprintf("[POST /v1/incidents/{incident_id}/related_change_events][%d] postV1IncidentsIncidentIdRelatedChangeEventsConflict  %+v", 409, o.Payload)
}

func (o *PostV1IncidentsIncidentIDRelatedChangeEventsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
