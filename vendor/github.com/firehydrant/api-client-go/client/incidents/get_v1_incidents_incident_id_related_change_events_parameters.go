// Code generated by go-swagger; DO NOT EDIT.

package incidents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetV1IncidentsIncidentIDRelatedChangeEventsParams creates a new GetV1IncidentsIncidentIDRelatedChangeEventsParams object
// with the default values initialized.
func NewGetV1IncidentsIncidentIDRelatedChangeEventsParams() *GetV1IncidentsIncidentIDRelatedChangeEventsParams {
	var ()
	return &GetV1IncidentsIncidentIDRelatedChangeEventsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetV1IncidentsIncidentIDRelatedChangeEventsParamsWithTimeout creates a new GetV1IncidentsIncidentIDRelatedChangeEventsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetV1IncidentsIncidentIDRelatedChangeEventsParamsWithTimeout(timeout time.Duration) *GetV1IncidentsIncidentIDRelatedChangeEventsParams {
	var ()
	return &GetV1IncidentsIncidentIDRelatedChangeEventsParams{

		timeout: timeout,
	}
}

// NewGetV1IncidentsIncidentIDRelatedChangeEventsParamsWithContext creates a new GetV1IncidentsIncidentIDRelatedChangeEventsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetV1IncidentsIncidentIDRelatedChangeEventsParamsWithContext(ctx context.Context) *GetV1IncidentsIncidentIDRelatedChangeEventsParams {
	var ()
	return &GetV1IncidentsIncidentIDRelatedChangeEventsParams{

		Context: ctx,
	}
}

// NewGetV1IncidentsIncidentIDRelatedChangeEventsParamsWithHTTPClient creates a new GetV1IncidentsIncidentIDRelatedChangeEventsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetV1IncidentsIncidentIDRelatedChangeEventsParamsWithHTTPClient(client *http.Client) *GetV1IncidentsIncidentIDRelatedChangeEventsParams {
	var ()
	return &GetV1IncidentsIncidentIDRelatedChangeEventsParams{
		HTTPClient: client,
	}
}

/*GetV1IncidentsIncidentIDRelatedChangeEventsParams contains all the parameters to send to the API endpoint
for the get v1 incidents incident Id related change events operation typically these are written to a http.Request
*/
type GetV1IncidentsIncidentIDRelatedChangeEventsParams struct {

	/*IncidentID*/
	IncidentID string
	/*Page*/
	Page *int32
	/*PerPage*/
	PerPage *int32
	/*Type
	  The type of the relation to the incident

	*/
	Type *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get v1 incidents incident Id related change events params
func (o *GetV1IncidentsIncidentIDRelatedChangeEventsParams) WithTimeout(timeout time.Duration) *GetV1IncidentsIncidentIDRelatedChangeEventsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get v1 incidents incident Id related change events params
func (o *GetV1IncidentsIncidentIDRelatedChangeEventsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get v1 incidents incident Id related change events params
func (o *GetV1IncidentsIncidentIDRelatedChangeEventsParams) WithContext(ctx context.Context) *GetV1IncidentsIncidentIDRelatedChangeEventsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get v1 incidents incident Id related change events params
func (o *GetV1IncidentsIncidentIDRelatedChangeEventsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get v1 incidents incident Id related change events params
func (o *GetV1IncidentsIncidentIDRelatedChangeEventsParams) WithHTTPClient(client *http.Client) *GetV1IncidentsIncidentIDRelatedChangeEventsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get v1 incidents incident Id related change events params
func (o *GetV1IncidentsIncidentIDRelatedChangeEventsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIncidentID adds the incidentID to the get v1 incidents incident Id related change events params
func (o *GetV1IncidentsIncidentIDRelatedChangeEventsParams) WithIncidentID(incidentID string) *GetV1IncidentsIncidentIDRelatedChangeEventsParams {
	o.SetIncidentID(incidentID)
	return o
}

// SetIncidentID adds the incidentId to the get v1 incidents incident Id related change events params
func (o *GetV1IncidentsIncidentIDRelatedChangeEventsParams) SetIncidentID(incidentID string) {
	o.IncidentID = incidentID
}

// WithPage adds the page to the get v1 incidents incident Id related change events params
func (o *GetV1IncidentsIncidentIDRelatedChangeEventsParams) WithPage(page *int32) *GetV1IncidentsIncidentIDRelatedChangeEventsParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the get v1 incidents incident Id related change events params
func (o *GetV1IncidentsIncidentIDRelatedChangeEventsParams) SetPage(page *int32) {
	o.Page = page
}

// WithPerPage adds the perPage to the get v1 incidents incident Id related change events params
func (o *GetV1IncidentsIncidentIDRelatedChangeEventsParams) WithPerPage(perPage *int32) *GetV1IncidentsIncidentIDRelatedChangeEventsParams {
	o.SetPerPage(perPage)
	return o
}

// SetPerPage adds the perPage to the get v1 incidents incident Id related change events params
func (o *GetV1IncidentsIncidentIDRelatedChangeEventsParams) SetPerPage(perPage *int32) {
	o.PerPage = perPage
}

// WithType adds the typeVar to the get v1 incidents incident Id related change events params
func (o *GetV1IncidentsIncidentIDRelatedChangeEventsParams) WithType(typeVar *string) *GetV1IncidentsIncidentIDRelatedChangeEventsParams {
	o.SetType(typeVar)
	return o
}

// SetType adds the type to the get v1 incidents incident Id related change events params
func (o *GetV1IncidentsIncidentIDRelatedChangeEventsParams) SetType(typeVar *string) {
	o.Type = typeVar
}

// WriteToRequest writes these params to a swagger request
func (o *GetV1IncidentsIncidentIDRelatedChangeEventsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param incident_id
	if err := r.SetPathParam("incident_id", o.IncidentID); err != nil {
		return err
	}

	if o.Page != nil {

		// query param page
		var qrPage int32
		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := swag.FormatInt32(qrPage)
		if qPage != "" {
			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}

	}

	if o.PerPage != nil {

		// query param per_page
		var qrPerPage int32
		if o.PerPage != nil {
			qrPerPage = *o.PerPage
		}
		qPerPage := swag.FormatInt32(qrPerPage)
		if qPerPage != "" {
			if err := r.SetQueryParam("per_page", qPerPage); err != nil {
				return err
			}
		}

	}

	if o.Type != nil {

		// query param type
		var qrType string
		if o.Type != nil {
			qrType = *o.Type
		}
		qType := qrType
		if qType != "" {
			if err := r.SetQueryParam("type", qType); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
