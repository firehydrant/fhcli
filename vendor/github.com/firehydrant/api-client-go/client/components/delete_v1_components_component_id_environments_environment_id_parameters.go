// Code generated by go-swagger; DO NOT EDIT.

package components

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteV1ComponentsComponentIDEnvironmentsEnvironmentIDParams creates a new DeleteV1ComponentsComponentIDEnvironmentsEnvironmentIDParams object
// with the default values initialized.
func NewDeleteV1ComponentsComponentIDEnvironmentsEnvironmentIDParams() *DeleteV1ComponentsComponentIDEnvironmentsEnvironmentIDParams {
	var ()
	return &DeleteV1ComponentsComponentIDEnvironmentsEnvironmentIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteV1ComponentsComponentIDEnvironmentsEnvironmentIDParamsWithTimeout creates a new DeleteV1ComponentsComponentIDEnvironmentsEnvironmentIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteV1ComponentsComponentIDEnvironmentsEnvironmentIDParamsWithTimeout(timeout time.Duration) *DeleteV1ComponentsComponentIDEnvironmentsEnvironmentIDParams {
	var ()
	return &DeleteV1ComponentsComponentIDEnvironmentsEnvironmentIDParams{

		timeout: timeout,
	}
}

// NewDeleteV1ComponentsComponentIDEnvironmentsEnvironmentIDParamsWithContext creates a new DeleteV1ComponentsComponentIDEnvironmentsEnvironmentIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteV1ComponentsComponentIDEnvironmentsEnvironmentIDParamsWithContext(ctx context.Context) *DeleteV1ComponentsComponentIDEnvironmentsEnvironmentIDParams {
	var ()
	return &DeleteV1ComponentsComponentIDEnvironmentsEnvironmentIDParams{

		Context: ctx,
	}
}

// NewDeleteV1ComponentsComponentIDEnvironmentsEnvironmentIDParamsWithHTTPClient creates a new DeleteV1ComponentsComponentIDEnvironmentsEnvironmentIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteV1ComponentsComponentIDEnvironmentsEnvironmentIDParamsWithHTTPClient(client *http.Client) *DeleteV1ComponentsComponentIDEnvironmentsEnvironmentIDParams {
	var ()
	return &DeleteV1ComponentsComponentIDEnvironmentsEnvironmentIDParams{
		HTTPClient: client,
	}
}

/*DeleteV1ComponentsComponentIDEnvironmentsEnvironmentIDParams contains all the parameters to send to the API endpoint
for the delete v1 components component Id environments environment Id operation typically these are written to a http.Request
*/
type DeleteV1ComponentsComponentIDEnvironmentsEnvironmentIDParams struct {

	/*ComponentID
	  Component UUID

	*/
	ComponentID string
	/*EnvironmentID*/
	EnvironmentID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete v1 components component Id environments environment Id params
func (o *DeleteV1ComponentsComponentIDEnvironmentsEnvironmentIDParams) WithTimeout(timeout time.Duration) *DeleteV1ComponentsComponentIDEnvironmentsEnvironmentIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete v1 components component Id environments environment Id params
func (o *DeleteV1ComponentsComponentIDEnvironmentsEnvironmentIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete v1 components component Id environments environment Id params
func (o *DeleteV1ComponentsComponentIDEnvironmentsEnvironmentIDParams) WithContext(ctx context.Context) *DeleteV1ComponentsComponentIDEnvironmentsEnvironmentIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete v1 components component Id environments environment Id params
func (o *DeleteV1ComponentsComponentIDEnvironmentsEnvironmentIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete v1 components component Id environments environment Id params
func (o *DeleteV1ComponentsComponentIDEnvironmentsEnvironmentIDParams) WithHTTPClient(client *http.Client) *DeleteV1ComponentsComponentIDEnvironmentsEnvironmentIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete v1 components component Id environments environment Id params
func (o *DeleteV1ComponentsComponentIDEnvironmentsEnvironmentIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithComponentID adds the componentID to the delete v1 components component Id environments environment Id params
func (o *DeleteV1ComponentsComponentIDEnvironmentsEnvironmentIDParams) WithComponentID(componentID string) *DeleteV1ComponentsComponentIDEnvironmentsEnvironmentIDParams {
	o.SetComponentID(componentID)
	return o
}

// SetComponentID adds the componentId to the delete v1 components component Id environments environment Id params
func (o *DeleteV1ComponentsComponentIDEnvironmentsEnvironmentIDParams) SetComponentID(componentID string) {
	o.ComponentID = componentID
}

// WithEnvironmentID adds the environmentID to the delete v1 components component Id environments environment Id params
func (o *DeleteV1ComponentsComponentIDEnvironmentsEnvironmentIDParams) WithEnvironmentID(environmentID string) *DeleteV1ComponentsComponentIDEnvironmentsEnvironmentIDParams {
	o.SetEnvironmentID(environmentID)
	return o
}

// SetEnvironmentID adds the environmentId to the delete v1 components component Id environments environment Id params
func (o *DeleteV1ComponentsComponentIDEnvironmentsEnvironmentIDParams) SetEnvironmentID(environmentID string) {
	o.EnvironmentID = environmentID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteV1ComponentsComponentIDEnvironmentsEnvironmentIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param component_id
	if err := r.SetPathParam("component_id", o.ComponentID); err != nil {
		return err
	}

	// path param environment_id
	if err := r.SetPathParam("environment_id", o.EnvironmentID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
