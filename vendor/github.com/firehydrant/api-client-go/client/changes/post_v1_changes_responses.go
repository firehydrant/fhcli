// Code generated by go-swagger; DO NOT EDIT.

package changes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/firehydrant/api-client-go/models"
)

// PostV1ChangesReader is a Reader for the PostV1Changes structure.
type PostV1ChangesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostV1ChangesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewPostV1ChangesCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostV1ChangesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostV1ChangesCreated creates a PostV1ChangesCreated with default headers values
func NewPostV1ChangesCreated() *PostV1ChangesCreated {
	return &PostV1ChangesCreated{}
}

/*PostV1ChangesCreated handles this case with default header values.

Create a new change entry
*/
type PostV1ChangesCreated struct {
	Payload *models.ChangeEntity
}

func (o *PostV1ChangesCreated) Error() string {
	return fmt.Sprintf("[POST /v1/changes][%d] postV1ChangesCreated  %+v", 201, o.Payload)
}

func (o *PostV1ChangesCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ChangeEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1ChangesBadRequest creates a PostV1ChangesBadRequest with default headers values
func NewPostV1ChangesBadRequest() *PostV1ChangesBadRequest {
	return &PostV1ChangesBadRequest{}
}

/*PostV1ChangesBadRequest handles this case with default header values.

Bad Request
*/
type PostV1ChangesBadRequest struct {
	Payload *models.ErrorEntity
}

func (o *PostV1ChangesBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/changes][%d] postV1ChangesBadRequest  %+v", 400, o.Payload)
}

func (o *PostV1ChangesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
