// Code generated by go-swagger; DO NOT EDIT.

package changes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/firehydrant/api-client-go/models"
)

// GetV1ChangesReader is a Reader for the GetV1Changes structure.
type GetV1ChangesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetV1ChangesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetV1ChangesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetV1ChangesOK creates a GetV1ChangesOK with default headers values
func NewGetV1ChangesOK() *GetV1ChangesOK {
	return &GetV1ChangesOK{}
}

/*GetV1ChangesOK handles this case with default header values.

Lists all changes
*/
type GetV1ChangesOK struct {
	Payload *models.ChangeEntityPaginated
}

func (o *GetV1ChangesOK) Error() string {
	return fmt.Sprintf("[GET /v1/changes][%d] getV1ChangesOK  %+v", 200, o.Payload)
}

func (o *GetV1ChangesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ChangeEntityPaginated)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
