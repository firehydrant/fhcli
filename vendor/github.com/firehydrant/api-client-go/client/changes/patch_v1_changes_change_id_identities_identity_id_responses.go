// Code generated by go-swagger; DO NOT EDIT.

package changes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/firehydrant/api-client-go/models"
)

// PatchV1ChangesChangeIDIdentitiesIdentityIDReader is a Reader for the PatchV1ChangesChangeIDIdentitiesIdentityID structure.
type PatchV1ChangesChangeIDIdentitiesIdentityIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchV1ChangesChangeIDIdentitiesIdentityIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPatchV1ChangesChangeIDIdentitiesIdentityIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPatchV1ChangesChangeIDIdentitiesIdentityIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPatchV1ChangesChangeIDIdentitiesIdentityIDOK creates a PatchV1ChangesChangeIDIdentitiesIdentityIDOK with default headers values
func NewPatchV1ChangesChangeIDIdentitiesIdentityIDOK() *PatchV1ChangesChangeIDIdentitiesIdentityIDOK {
	return &PatchV1ChangesChangeIDIdentitiesIdentityIDOK{}
}

/*PatchV1ChangesChangeIDIdentitiesIdentityIDOK handles this case with default header values.

Update an identity
*/
type PatchV1ChangesChangeIDIdentitiesIdentityIDOK struct {
	Payload *models.ChangeIdentityEntity
}

func (o *PatchV1ChangesChangeIDIdentitiesIdentityIDOK) Error() string {
	return fmt.Sprintf("[PATCH /v1/changes/{change_id}/identities/{identity_id}][%d] patchV1ChangesChangeIdIdentitiesIdentityIdOK  %+v", 200, o.Payload)
}

func (o *PatchV1ChangesChangeIDIdentitiesIdentityIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ChangeIdentityEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchV1ChangesChangeIDIdentitiesIdentityIDBadRequest creates a PatchV1ChangesChangeIDIdentitiesIdentityIDBadRequest with default headers values
func NewPatchV1ChangesChangeIDIdentitiesIdentityIDBadRequest() *PatchV1ChangesChangeIDIdentitiesIdentityIDBadRequest {
	return &PatchV1ChangesChangeIDIdentitiesIdentityIDBadRequest{}
}

/*PatchV1ChangesChangeIDIdentitiesIdentityIDBadRequest handles this case with default header values.

Bad Request
*/
type PatchV1ChangesChangeIDIdentitiesIdentityIDBadRequest struct {
	Payload *models.ErrorEntity
}

func (o *PatchV1ChangesChangeIDIdentitiesIdentityIDBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /v1/changes/{change_id}/identities/{identity_id}][%d] patchV1ChangesChangeIdIdentitiesIdentityIdBadRequest  %+v", 400, o.Payload)
}

func (o *PatchV1ChangesChangeIDIdentitiesIdentityIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
