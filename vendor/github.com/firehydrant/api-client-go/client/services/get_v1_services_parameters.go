// Code generated by go-swagger; DO NOT EDIT.

package services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetV1ServicesParams creates a new GetV1ServicesParams object
// with the default values initialized.
func NewGetV1ServicesParams() *GetV1ServicesParams {
	var ()
	return &GetV1ServicesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetV1ServicesParamsWithTimeout creates a new GetV1ServicesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetV1ServicesParamsWithTimeout(timeout time.Duration) *GetV1ServicesParams {
	var ()
	return &GetV1ServicesParams{

		timeout: timeout,
	}
}

// NewGetV1ServicesParamsWithContext creates a new GetV1ServicesParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetV1ServicesParamsWithContext(ctx context.Context) *GetV1ServicesParams {
	var ()
	return &GetV1ServicesParams{

		Context: ctx,
	}
}

// NewGetV1ServicesParamsWithHTTPClient creates a new GetV1ServicesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetV1ServicesParamsWithHTTPClient(client *http.Client) *GetV1ServicesParams {
	var ()
	return &GetV1ServicesParams{
		HTTPClient: client,
	}
}

/*GetV1ServicesParams contains all the parameters to send to the API endpoint
for the get v1 services operation typically these are written to a http.Request
*/
type GetV1ServicesParams struct {

	/*Labels
	  A comma separated list of label key / values in the format of "key=value,key2=value2". To filter change events that have a key (with no specific value), omit the value

	*/
	Labels *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get v1 services params
func (o *GetV1ServicesParams) WithTimeout(timeout time.Duration) *GetV1ServicesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get v1 services params
func (o *GetV1ServicesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get v1 services params
func (o *GetV1ServicesParams) WithContext(ctx context.Context) *GetV1ServicesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get v1 services params
func (o *GetV1ServicesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get v1 services params
func (o *GetV1ServicesParams) WithHTTPClient(client *http.Client) *GetV1ServicesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get v1 services params
func (o *GetV1ServicesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithLabels adds the labels to the get v1 services params
func (o *GetV1ServicesParams) WithLabels(labels *string) *GetV1ServicesParams {
	o.SetLabels(labels)
	return o
}

// SetLabels adds the labels to the get v1 services params
func (o *GetV1ServicesParams) SetLabels(labels *string) {
	o.Labels = labels
}

// WriteToRequest writes these params to a swagger request
func (o *GetV1ServicesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Labels != nil {

		// query param labels
		var qrLabels string
		if o.Labels != nil {
			qrLabels = *o.Labels
		}
		qLabels := qrLabels
		if qLabels != "" {
			if err := r.SetQueryParam("labels", qLabels); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
