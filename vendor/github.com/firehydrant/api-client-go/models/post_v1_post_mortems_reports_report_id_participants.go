// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PostV1PostMortemsReportsReportIDParticipants Add a participant to the post mortem report
// swagger:model postV1PostMortemsReportsReportIdParticipants
type PostV1PostMortemsReportsReportIDParticipants struct {

	// source
	// Required: true
	// Enum: [firehydrant_user firehydrant_team]
	Source *string `json:"source"`

	// source id
	// Required: true
	SourceID *string `json:"source_id"`
}

// Validate validates this post v1 post mortems reports report Id participants
func (m *PostV1PostMortemsReportsReportIDParticipants) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSource(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSourceID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var postV1PostMortemsReportsReportIdParticipantsTypeSourcePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["firehydrant_user","firehydrant_team"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		postV1PostMortemsReportsReportIdParticipantsTypeSourcePropEnum = append(postV1PostMortemsReportsReportIdParticipantsTypeSourcePropEnum, v)
	}
}

const (

	// PostV1PostMortemsReportsReportIDParticipantsSourceFirehydrantUser captures enum value "firehydrant_user"
	PostV1PostMortemsReportsReportIDParticipantsSourceFirehydrantUser string = "firehydrant_user"

	// PostV1PostMortemsReportsReportIDParticipantsSourceFirehydrantTeam captures enum value "firehydrant_team"
	PostV1PostMortemsReportsReportIDParticipantsSourceFirehydrantTeam string = "firehydrant_team"
)

// prop value enum
func (m *PostV1PostMortemsReportsReportIDParticipants) validateSourceEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, postV1PostMortemsReportsReportIdParticipantsTypeSourcePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *PostV1PostMortemsReportsReportIDParticipants) validateSource(formats strfmt.Registry) error {

	if err := validate.Required("source", "body", m.Source); err != nil {
		return err
	}

	// value enum
	if err := m.validateSourceEnum("source", "body", *m.Source); err != nil {
		return err
	}

	return nil
}

func (m *PostV1PostMortemsReportsReportIDParticipants) validateSourceID(formats strfmt.Registry) error {

	if err := validate.Required("source_id", "body", m.SourceID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PostV1PostMortemsReportsReportIDParticipants) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PostV1PostMortemsReportsReportIDParticipants) UnmarshalBinary(b []byte) error {
	var res PostV1PostMortemsReportsReportIDParticipants
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
